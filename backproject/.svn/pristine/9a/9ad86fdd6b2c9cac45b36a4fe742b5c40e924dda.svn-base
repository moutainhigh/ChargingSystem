package com.egintra.feeService.department.service.impl;

import com.egintra.common.dto.DepartmentReqDTO;
import com.egintra.common.repository.mapper.DepartmentMapper;
import com.egintra.common.utils.DataReuslt;
import com.egintra.common.utils.DateUtils;
import com.egintra.feeService.config.PageResult;
import com.egintra.feeService.department.service.DepartmentService;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import javax.annotation.Resource;
import java.util.List;
import java.util.UUID;

@Service
public class DepartmentServiceImpl implements DepartmentService {

    @Resource
    private DepartmentMapper departmentMapper;


    /**
     * 查看 列表 （分页）
     *
     * @param department
     * @return
     */
    @Override
    public DataReuslt getDepartmentList(DepartmentReqDTO department) {
        Page ps = PageHelper.startPage(department.getPage(), department.getSize());
        List<DepartmentReqDTO> departments = departmentMapper.getDepartmentList(department);
        PageResult<DepartmentReqDTO> result = new PageResult<DepartmentReqDTO>();
        result.setRows(departments);
        result.setTotal(ps.getTotal());
        result.setPages(ps.getPages());
        result.setCurrentPage(department.getPage());
        return DataReuslt.success(result);
    }

    /**
     * 查看列表(不分页)
     *
     * @param department
     * @return
     */
    @Override
    public DataReuslt getDepartmentLists(DepartmentReqDTO department) {
        List<DepartmentReqDTO> departments = departmentMapper.getDepartmentList(department);
        return DataReuslt.success(departments);
    }

    /**
     * 添加单位
     * @param departmentReqDTO
     * @return
     */
    @Override
    @Transactional
    public DataReuslt addDepartment(DepartmentReqDTO departmentReqDTO) {
        DepartmentReqDTO depart = departmentMapper.getOne(departmentReqDTO.getUnitRegion());
        if (depart != null) {
            return DataReuslt.fail("1", "单位编码已经存在");
        }
        DepartmentReqDTO name = departmentMapper.findByName(departmentReqDTO.getUnitName());
        if (name != null) {
            return DataReuslt.fail("1", "单位名称已经存在");
        }
        departmentReqDTO.setRecordStatus("0");
        String curDate = DateUtils.getCurDate();
        departmentReqDTO.setRecordCreateTm(curDate);
        departmentReqDTO.setRecordModifyTm(curDate);
        departmentMapper.addDepartment(departmentReqDTO);
        return DataReuslt.success(departmentReqDTO);
    }

    /**
     * 编辑单位
     * @param departmentReqDTO
     * @return
     */
    @Override
    @Transactional
    public DataReuslt editDepartment(List<DepartmentReqDTO> departmentReqDTO) {
        departmentMapper.editDepart(departmentReqDTO);
        return DataReuslt.success(departmentReqDTO);
    }

    /**
     * 删除单位
     * @param id
     * @return
     */
    @Override
    public DataReuslt deleteById(String id) {
        departmentMapper.deleteById(id);
        return DataReuslt.success("删除成功");
    }

    /**
     * 查看单位详情
     * @param id
     * @return
     */
    @Override
    public DataReuslt getOne(String id) {
        DepartmentReqDTO departmentReqDTO = departmentMapper.getOne(id);
        return DataReuslt.success(departmentReqDTO);
    }
}
