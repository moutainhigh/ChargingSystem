package com.egintra.feeService.projectclass.service.impl;

import com.egintra.common.dto.ProjectClassReqDTO;
import com.egintra.common.dto.ProjectDetailReqDTO;
import com.egintra.common.repository.mapper.ProjectClassMapper;
import com.egintra.common.repository.mapper.ProjectDetailMapper;
import com.egintra.common.utils.DataReuslt;
import com.egintra.common.utils.DateUtils;
import com.egintra.feeService.config.PageResult;
import com.egintra.feeService.projectclass.service.ProjectClassService;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import javax.annotation.Resource;
import java.util.List;
import java.util.UUID;

@Service
public class ProjectClassServiceImpl implements ProjectClassService {

    @Resource
    private ProjectClassMapper projectClassMapper;

    @Resource
    private ProjectDetailMapper projectDetailMapper;


    /**
     * 列表(分页)
     * @param projectClassReqDTO
     * @return
     */
    @Override
    public DataReuslt getProjectClassList(ProjectClassReqDTO projectClassReqDTO) {
        Page ps = PageHelper.startPage(projectClassReqDTO.getPage(), projectClassReqDTO.getSize());
        List<ProjectClassReqDTO> projectClassList = projectClassMapper.getProjectClassList(projectClassReqDTO);
        PageResult<ProjectClassReqDTO> result = new PageResult<ProjectClassReqDTO>();
        result.setRows(projectClassList);
        result.setTotal(ps.getTotal());
        result.setPages(ps.getPages());
        result.setCurrentPage(projectClassReqDTO.getPage());
        return DataReuslt.success(result);
    }

    /**
     * 列表(不分页)
     * @param projectClassReqDTO
     * @return
     */
    @Override
    public DataReuslt getProjectClassLists(ProjectClassReqDTO projectClassReqDTO) {
        List<ProjectClassReqDTO> departments = projectClassMapper.getProjectClassList(projectClassReqDTO);
        return DataReuslt.success(departments);
    }

    /**
     * 新增大类
     * @param projectClassReqDTO
     * @return
     */
    @Override
    @Transactional
    public DataReuslt addProjectClass(ProjectClassReqDTO projectClassReqDTO) {
        ProjectClassReqDTO classReqDTO =projectClassMapper.getOne(projectClassReqDTO.getClassId());
        if(classReqDTO!=null){
           return DataReuslt.fail("大类代码在系统中已经存在");
        }
        ProjectClassReqDTO name =projectClassMapper.findByName(projectClassReqDTO.getClassName());
        if(name!=null){
            return DataReuslt.fail("大类名称在系统中已经存在");
        }
        projectClassReqDTO.setRecordStatus("0");
        String curDate = DateUtils.getCurDate();
        projectClassReqDTO.setRecordCreateTm(curDate);
        projectClassReqDTO.setRecordModifyTm(curDate);
        projectClassMapper.addProjectClass(projectClassReqDTO);
        return DataReuslt.success(projectClassReqDTO);
    }

    /**
     * 编辑大类
     * @param projectClassReqDTOS
     * @return
     */
    @Override
    @Transactional
    public DataReuslt editProjectClass(List<ProjectClassReqDTO> projectClassReqDTOS) {
        String curDate = DateUtils.getCurDate();
        projectClassReqDTOS.forEach(projectClassReqDTO -> {
            projectClassReqDTO.setRecordModifyTm(curDate);
        });
        projectClassMapper.editProjectClass(projectClassReqDTOS);
        return DataReuslt.success(projectClassReqDTOS);
    }

    /**
     * 删除大类
     * @param id
     * @return
     */
    @Override
    public DataReuslt deleteById(String id) {
        List<ProjectDetailReqDTO> list=projectDetailMapper.getDetailList(id);
        if(list.size()!=0){
            return DataReuslt.fail("0","大类下存在明细,不允许删除！");
        }
        projectClassMapper.deleteById(id);
        return DataReuslt.success("删除成功");
    }

    /**
     * 查看详情
     * @param id
     * @return
     */
    @Override
    public DataReuslt getOne(String id) {
        ProjectClassReqDTO projectClassReqDTO = projectClassMapper.getOne(id);
        return DataReuslt.success(projectClassReqDTO);
    }
}
