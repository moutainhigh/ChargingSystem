package com.egintra.feeService.job.pay.service.impl;

import com.egintra.common.dto.pay.FeePayinfoRespDTO;
import com.egintra.common.repository.mapper.PayInfoMapper;
import com.egintra.common.utils.DataReuslt;
import com.egintra.feeService.job.pay.service.BookingUnlockService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.util.CollectionUtils;

import javax.annotation.Resource;
import java.util.List;

/**
 * 支付业务中的记账、解锁业务服务
 *
 * @author liushihao
 * @date 2021/8/11
 */
@Service
public class BookingUnlockServiceImpl implements BookingUnlockService {

    private static final Logger LOGGER = LoggerFactory.getLogger(BookingUnlockServiceImpl.class);

    @Resource
    private PayInfoMapper payInfoMapper;

    /**
     * 记账、解锁业务服务
     *
     * @return 结果
     */
    @Override
    public DataReuslt bookingUnlock() {
        LOGGER.info("记账、解锁任务开始");

        // 查询payinfo表，获取支付成功且未记账数据
        String zfbj = "1";
        String jzbj = "0";
        List<FeePayinfoRespDTO> feePayinfos = payInfoMapper.queryUnpaidInfos(zfbj, jzbj, "");
        if (CollectionUtils.isEmpty(feePayinfos)){
            LOGGER.info("记账、解锁任务结束:查询无需要记账、解锁的数据");
            return DataReuslt.success();
        }

        // 循环遍历支付信息，根据orderid获取临时记账发票主表和临时明细表，并转移到发票主表和明细表
        for (FeePayinfoRespDTO feePayinfo : feePayinfos) {
            String orderId = feePayinfo.getOrderid();

        }


        LOGGER.info("记账、解锁任务结束");

        return DataReuslt.success();
    }
}
